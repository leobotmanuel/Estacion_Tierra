#include <AES.h>
#include "./printf.h"

AES aes ;

String cadena = "vamos a probar, 2516.335541865,525,2.22354103,adfg auid.dadgf,uyktasdf,234.23452,3452.23452562gfwef,efqwkj.";
const char *plain_ptr = cadena.c_str();


byte *key = (unsigned char*)"0123456789010123";

int plainLength = cadena.length();
int padedLength = plainLength + N_BLOCK - plainLength % N_BLOCK;

//real iv = iv x2 ex: 01234567 = 0123456701234567
unsigned long long int my_iv = 36753562;

void setup ()
{
  Serial.begin (57600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  }
  printf_begin();
  delay(500);
  printf("\n===testing mode\n") ;

  //  otfly_test () ;
  //  otfly_test256 () ;
}

void loop ()
{
  Serial.print("tama√±o: ");
  Serial.println(plainLength);
  Serial.println();
  printf(plain_ptr);
  prekey_test () ;
  delay(2000);
}


void prekey (int bits)
{
  Serial.print("Cadena original: ");
  Serial.println(plain_ptr);
  Serial.println();

  aes.iv_inc();
  byte iv [N_BLOCK] ;
  byte plain_p[padedLength];  // Cadena original
  byte cipher [padedLength] ;  // Cadena encriptada
  byte check [padedLength] ;  // Cadena descencriptada
  unsigned long ms = micros ();
  aes.set_IV(my_iv);
  aes.get_IV(iv);
  aes.do_aes_encrypt((unsigned char*)plain_ptr, plainLength, cipher, key, bits, iv);

  Serial.print("Cadena encriptada: ");
  Serial.println((char *)cipher);
  Serial.println();

  Serial.print("Encryption took: ");
  Serial.println(micros() - ms);
  Serial.println();

  ms = micros ();
  aes.set_IV(my_iv);
  aes.get_IV(iv);
  aes.do_aes_decrypt(cipher, padedLength, check, key, bits, iv);

  Serial.print("Cadena desencriptada: ");
  Serial.println((char *)check);
  Serial.println();

  Serial.print("Decryption took: ");
  Serial.println(micros() - ms);
  Serial.println();

  Serial.print("\n============================================================\n");
 
 /*printf("\n\nPLAIN :");
    aes.printArray((unsigned char*)plain_ptr,(bool)true);
    printf("\nCIPHER:");
    aes.printArray(cipher,(bool)false);
    printf("\nCHECK :");
    aes.printArray(check,(bool)true);
    printf("\nIV    :");
    aes.printArray(iv,16);
    printf("\n============================================================\n");
  */
}


void prekey_test ()
{
  prekey (128) ;
}
