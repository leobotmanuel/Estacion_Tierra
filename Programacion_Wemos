#include <PubSubClient.h>
#include "ThingsBoard.h"
#include <ESP8266WiFi.h>
#include <string.h>

// Definimos las credenciales de la WiFi
#define WIFI_AP             "gofionet"
#define WIFI_PASSWORD       "Saul21052004/"

// Definimos los parametros de ThingsBoard
#define TOKEN               "ASD"

#define THINGSBOARD_SERVER  "192.168.1.13"
#define THINGSBOARD_PORT    8080

WiFiClient espClient;
ThingsBoard tb(espClient);
int status = WL_IDLE_STATUS;

String cabecerasthingsboard [] = {"LatitudGPS","LongitudGPS","velocidadGPS","altitudGPS","temperaturaBME","presionBME","humedadBME","CO2","GasesVolatiles","DUV"};
String datos = "123.35,345.55,45.44,23.45,34.54,344.54,5.9,56.98,76.98,5437.898";
String prov = "";
String datosthingsboard [10];
int contador = 0;

void setup() {
  Serial.begin(9600);
}
void loop(){

for (int h=0;h<datos.length();h++){
  if (datos[h] != ','){
    prov = prov + datos[h];
    }else if (datos[h] == ','){
      datosthingsboard [contador] = prov;
      prov = "";
      contador ++;
      }
  }

    if (WiFi.status() != WL_CONNECTED) {
      reconnect();
    }
    if (!tb.connected()) {
      // Conectar a ThingsBoard
      Serial.print("Conectando a: ");
      Serial.print(THINGSBOARD_SERVER);
      Serial.print(" con el token ");
      Serial.println(TOKEN);
      if (!tb.connect(THINGSBOARD_SERVER, TOKEN)) {
        Serial.println("Error al conectar con thingsboard");
        return;
      }
    }
    // Mandamos los datos
    Serial.println("Mandando datos...");

      tb.sendTelemetryFloat("LatitudGPS", datosthingsboard[0].toFloat());
      tb.sendTelemetryFloat("LongitudGPS", datosthingsboard[1].toFloat());
      tb.sendTelemetryFloat("velocidadGPS", datosthingsboard[2].toFloat());
      tb.sendTelemetryFloat("altitudGPS", datosthingsboard[3].toFloat());
      tb.sendTelemetryFloat("temperaturaBME", datosthingsboard[4].toFloat());
      tb.sendTelemetryFloat("presionBME", datosthingsboard[5].toFloat());
      tb.sendTelemetryFloat("humedadBME", datosthingsboard[6].toFloat());
      tb.sendTelemetryFloat("CO2", datosthingsboard[7].toFloat());
      tb.sendTelemetryFloat("GasesVolatiles", datosthingsboard[8].toFloat());
      tb.sendTelemetryFloat("DUV", datosthingsboard[9].toFloat());
    
    tb.loop();
    delay(5000);
}

void InitWiFi()
{
  Serial.println("Conectando ...");
  WiFi.begin(WIFI_AP, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Conectado!");
}
// Funcion para reconectar a WiFi
void reconnect() {
  status = WiFi.status();
  if ( status != WL_CONNECTED) {
    WiFi.begin(WIFI_AP, WIFI_PASSWORD);
    while (WiFi.status() != WL_CONNECTED) {
      delay(1000);
      Serial.print(".");
    }
    Serial.println("Conectado!");
  }
}
